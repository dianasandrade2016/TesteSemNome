
%{
#include <iostream>
#include <string>
#include <sstream>
#include <map>

//#define YYSTYPE init

//using namespace std;

//struct init
//{	
//	string rotulo;
//	string trad;
//};

int yylex(void);
void yyerror(string);
%}

%token TK_INT TK_FLOAT TK_BOOLEAN TK_CHAR TK_STRING TK_VOID
%token TK_MAIN TK_ID TK_TIPO_INT TK_TIPO_FLOAT TK_TIPO_BOOLEAN TK_TIPO_CHAR TK_TIPO_STRING TK_TIPO_VOID
%token TK_FIM TK_ERROR
%token TK_MENOR TK_MAIOR TK_MENOR_IGUAL TK_MAIOR_IGUAL TK_IGUAL TK_DIFERENTE TK_OU TK_E
%token TK_INC TK_DEC 
%token TK_COUT
%token TK_DOIS_PONTOS
%token TK_DO TK_WHILE TK_IF TK_ELSE
%token TK_ADD_ATRIBUICAO TK_DEL_ATRIBUICAO
%token TK_OR TK_AND


%start ALGORITMO

%right '='
%left '+' '-'
%left '*' '/' '%'
%left TK_INC TK_DEC
%left TK_OU
%left TK_E
%left TK_IGUAL TK_DIFERENTE
%left TK_MENOR TK_MAIOR TK_MENOR_IGUAL TK_MAIOR_IGUAL
%left '(' ')'

%%
ALGORITMO	:INICIO ALGORITMO {cout << "\t teste1 \n" << endl;}
		|DECLARACAO_VARIAVEIS
		|FUNCAO
		|DECLARACAO_VARIAVEIS ALGORITMO
		|FUNCAO ALGORITMO
		;

INICIO		:MAIN
		:TK_TIPO_INT TK_MAIN '(' ')'
		{cout <<"\t teste2 \n" << endl;}
		;

FUNCAO		:TIPO TK_ID PARAMETROS '{'COMANDOS'}'
		|TIPO TK_ID PARAMETROS '{' TIPO_FUNCAO COMANDOS '}'
		;

TIPO_FUNCAO	:DECLARACAO_VARIAVEIS
		|DECLARACAO_VARIAVEIS TIPO_FUNCAO
		;

PARAMETROS	:'(' ')'
		|'(' ')'
		;

TIPO_PARAMETROS	:TIPO TK_ID
		|TIPO TK_ID ',' TIPO_PARAMETROS
		;

COMANDOS	:LISTA_COMANDOS
		|LISTA_COMANDOS COMANDOS
		;

BLOCO		:'{'COMANDOS'}'
		;

LISTA_COMANDOS	: TK_DO BLOCO TK_WHILE '(' EXPRESSAO ')' ';'
		|TK_IF '(' EXPRESSAO ')' BLOCO TK_ELSE CONTROL_ELSE
		|TK_IF '(' EXPRESSAO ')'BLOCO
		;

CONTROL_FOR	:EXPRESSAO ';'
		|';'
		;

CONTROL2_FOR	:EXPRESSAO '('
		|')'
		;

CONTROL_ELSE	:BLOCO
		|'{' '}'
		;
COUT		:',' EXPRESSAO
		|',' EXPRESSAO COUT
		;

DECLARACAO_VARIAVEIS	:TIPO CONTROL_DECLARACAO_VARIAVEL
			{cout << "\t teste3 \n" << endl;}
			;

TIPO			:TK_INT {cout << "\t int \n" << endl;}
			|TK_CHAR {cout << "\t char \n" << endl;}
			|TK_VOID {cout << "\t void \n" << endl;}
			;

CONTROL_DECLARACAO_VARIAVEL	: TK_ID CONTROL2_DECLARACAO_VARIAVEIS  {cout << $1 << "\t teste4 \n" << endl;}
				|TK_ID '+' EXPRESSAO CONTROL2_DECLARACAO_VARIAVEIS
				;

CONTROL2_DECLARACAO_VARIAVEL	:',' CONTROL_DECLARACAO_VARIAVEL
				:';'
				;
EXPRESSAO	:EXPRESSAO_CONDICIONAL
		|EXPRESSAO_CONDICIONAL CONTROL_EXPRESSAO
		;

EXPRESSAO_CONDICIONAL
:EXPRESSAO_OR_LOGICO
|';' EXPRESSAO_OR_LOGICA TK_DOIS_PONTOS EXPRESSAO_OR_LOGICO
;

CONTROL_EXPRESSAO
:'+' EXPRESSAO
|TK_ADD_ATRIBUICAO EXPRESSAO
|TK_DEL_ATRIBUICAO EXPRESSAO
;

EXPRESSAO_OR_LOGICO
:EXPRESSAO_AND_LOGICO
|EXPRESSAO_AND_LOGICO CONTROL_EXPRESSAO_OR_LOGICO
;

CONTROL_EXPRESSAO_OR_LOGICA
:TK_OR EXPRESSAO_OR_LOGICA
;
EXPRESSAO_AND_LOGICA
:EXPRESSAO OR
|EXPRESSAO_OR CONTROL_EXPRESSAO_AND_LOGICA 
;

CONTROL_EXPRESSAO_AND_LOGICA
:TK_AND EXPRESSAO_AND_LOGIO
;


%%
#include "lex.yy.c"
int main( int argc, char* argv[] )
{
	yyparse();
	return 0;
}
void yyerror( string MSG )
{
	cout << MSG << endl;
	exit(0);
}
